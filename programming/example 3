public class cs2_test_2 {
    static class TreeNode {
        public int data;
        public TreeNode left, right;
        public TreeNode(int data_, TreeNode left_, TreeNode right_) {
            this.data = data_;
            this.left = left_;
            this.right = right_;
        }
    }
    //return the number of leaves that are on the right side (right child of their parent node)
    public static int count_right_leaves(TreeNode root) {
        if (root == null) return 0;
        int count = 0;
        if (root.right != null && root.right.left == null && root.right.right ==null) count++;
        return count + count_right_leaves(root.left) + count_right_leaves(root.right);
    }
    // remove all nodes exactly two children and return new root
    public static TreeNode delete_nodes_with_two_children(TreeNode root) {
        if (root == null) return null;
        root.left = delete_nodes_with_two_children(root.left);
        root.right = delete_nodes_with_two_children(root.right);
        if (root.left != null && root.right != null) return null;
        return root;
    }
}
 
